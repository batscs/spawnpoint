[{"id":"9dc66200-8e96-438f-b9e8-c77857486718","name":"pangolin","topics":["website"],"details":["nodejs","expressjs","modular"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2024-09-01","endDate":"","source":"https://git.bats.li/bats/pangolin","preview":"","banner":"94378899-2d61-4515-a435-fe92eb5fdd94.png"},{"id":"010101","name":"spawnpoint","topics":["website"],"details":["nodejs","expressjs","scalable"],"description":"# Introduction\r\n\r\nWelcome to **Project Spawnpoint**, the website I am currently working on. It’s a complete rework of my old homepage, which has been long overdue for an upgrade. While the previous version served its purpose, it was built with PHP and lacked scalability, which became more and more of a pain as I continued to add projects.\r\n\r\nThis new version is built with **Node.js** and **Express.js**, allowing for a much more scalable approach. The main reason for this rework was to make the website adaptable for future growth while also introducing an **admin panel** that enables me to manage projects with ease. Now, I can add new projects and update information without diving into the code every time. All the data is saved persistently, making it far more efficient to handle.\r\n\r\n# Intention\r\nIn contrast to **Spawnpoint**, the old website forced me to manually edit the code every time I wanted to add a new project, which was far from ideal. While it worked in the early stages, it quickly became frustrating and time-consuming. This new system streamlines the process and gives me the flexibility to scale as needed, without having to worry about the technical limitations of the past, thanks to the implementation of an admin panel.\r\n\r\n![image](/static/resources/media/982741e2-63f2-4519-b772-0f09959e722a.png)\r\n\r\n# Implementation Details\r\n\r\n## Authorization\r\nAs this web app is not intended to provide access to multiple users, password authorization has been chosen for the admin panel. On successful login, a server-side generated token is associated with the user (saved as a cookie). On each HTTP request to the admin panel, the cookie is verified to ensure it is still valid to prevent unauthorized access.\r\n\r\n## Front- & Back-End Separation\r\nAlso, different from the previous iteration of this website, which was a monolith made entirely out of PHP, HTML, and CSS, this project has a proper backend and an independent front-end. The front-end has been implemented with the templating language **Pug**, which is translated into **HTML**.\r\n\r\n## Persistence\r\nAll projects are saved in a JSON database. JSON was chosen because it is a lot less performance- and storage-demanding than a relational database, as the only overhead is ensuring data integrity. Since the points of failure are manageable (editing and creating projects), this is not a significant issue.\r\n\r\nA database cache has also been implemented, which caches all results accessed by users for a set amount of time. The downside is that changes may only be visible after the cache expires, but the upside is that frequent reading of the file is prevented. Since changes aren’t expected often, this is a net positive.\r\n\r\n## Flexibility\r\nEach project can have its own description, which supports markdown when editing in the admin panel and renders accordingly when visited by users. This was made to allow the admin (me) to create very flexible descriptions of projects and dynamically include pictures and code blocks.\r\n\r\n![image](/static/resources/media/7f92db85-0eac-49fe-a8f7-c3fb9cb0273c.png)\r\n\r\n## Blog Posts (discarded)\r\nInitially, I planned to have a blog for each project where new posts could be added and existing ones edited through the admin panel. However, I discarded this idea because it wouldn’t provide much additional benefit over the description field (other than perhaps separating blog posts or comments). Updates can still be added in the current description and visualized with markdown, for example:\r\n\r\n> Update: 2024 September 15th  \r\n> Today I decided not to work on this project and went shopping.\r\n","isPublished":true,"startDate":"2024-07-04","endDate":"2024-08-04","source":"https://git.bats.li/bats/spawnpoint","preview":"https://bats.li","banner":"168b84e7-0f43-49a2-8061-15d68866580d.png"},{"id":"5dc16c3d-60a7-4e5d-b29d-c35d82c4be31","name":"Linux Homeserver","topics":["hardware"],"details":["docker","admin","networking"],"description":"# Home Server Setup\r\n\r\nThis is a place to document my journey in setting up my home server, primarily to learn about server administration and to host services for my personal projects.\r\n\r\n![image](http://localhost:3000/static/resources/media/mirage.png)\r\n\r\n# Technical Details\r\nThe home server is a Dell Optiplex 3070 equipped with an Intel i5-9500T. Originally, it came with 8GB of RAM and a 500GB HDD, but I upgraded it to 32GB of RAM and replaced the HDD with a 1TB NVMe SSD (Samsung Evo 970). This was to ensure I would not need to worry about storage usage for the forseeable future, and be able to run many containers in parallel without worrying about ram usage.\r\n\r\nI acquired this machine with the intention of learning more about server administration and hosting servers for personal projects with docker.\r\n\r\n# Configuration\r\nThe server acts as the backend for my domain, [bats.li](https://bats.li). All incoming traffic is routed through a Traefik reverse proxy, allowing different subdomains (e.g., git.bats.li and cloud.bats.li) to be routed to separate Docker containers, even though they share the same IP address on my home server.\r\n\r\n## Running Services\r\nCurrently, the server hosts several services that I use regularly:\r\n\r\n- **Nextcloud** (Cloud Storage)\r\n- **Gitea** (self-hosted Git service)\r\n- **Vikunja** (Kanban board for project & idea management)\r\n- **[Spawnpoint](/project/010101)** (Homepage)\r\n\r\nEach service runs inside its own Docker container, making management, updates, and scaling simple.\r\n\r\n# Challenges & Learnings\r\nSetting up Traefik was an painful experience at first, particularly because it was hard to understand unexpected behaviour. However after reading a lot of documentation I figured how to configure traefik and assign containers to traefik using labels and the correct docker network. The reverse proxy allows seamless routing of traffic to the appropriate service without exposing all ports individually.\r\n\r\nDocker and Traefik have made it incredibly easy to run multiple services on the same server, all accessible through different subdomains, giving me a better grasp of network configuration and server management.\r\n","isPublished":true,"startDate":"2024-05-01","endDate":"2024-05-20","source":"","preview":"","banner":"91cbed7f-eee6-48ee-9386-ee16a86db707.png"},{"id":"2","name":"BESD","topics":["software"],"details":["docker","python"],"description":"# BESD (Bats' Epic Server Dashboard)\r\n\r\nThis is a place to document my journey in building BESD, a self-made dashboard to monitor various system metrics. The primary goal was to get hands-on experience with Docker and Docker Compose, understanding how multiple containers can communicate in a shared Docker network.\r\n\r\n![image](/static/resources/media/4b6108a4-1c25-4ebb-8dca-94dc5e195730.png)\r\n\r\n# Intention\r\nBESD is designed to monitor my [home server's](/project/5dc16c3d-60a7-4e5d-b29d-c35d82c4be31) performance metrics and make them available through a simple web interface. The main focus was learning Docker, so the frontend is quite basic, but it gets the job done.\r\n\r\nFor my [home server project](/project/5dc16c3d-60a7-4e5d-b29d-c35d82c4be31), I wanted a custom solution that tracks important metrics like:\r\n\r\n- Docker container stats\r\n- Memory usage\r\n- Storage usage\r\n- Network activity (tx and rx)\r\n- System information (OS, CPU name, CPU temperature, CPU power)\r\n- Server time and uptime\r\n- Number of running containers\r\n\r\nAll this data is collected and stored in a MySQL Docker container.\r\n\r\n# Implementation Details\r\nI used three main Docker containers to accomplish this:\r\n\r\n## Python Metrics Collector\r\n   A Python script running in a Docker container continuously gathers stats and metrics from the server. It collects data on the previously mentioned statistics. This data is then stored in a MySQL database.\r\n\r\n## MySQL Database\r\n   The collected metrics are stored in a MySQL database, also running in its own Docker container. Nodes (python containers) can connect to this MySQL Database, to be scalable for future usage.\r\n\r\n## Apache Web Server\r\n   The frontend is served using an Apache web server. PHP is used to query the MySQL database and provide an API. JavaScript handles asynchronous calls to display the data. The UI is basic, with simple HTML and CSS, allowing users to see current metrics for any selected host. A dropdown at the top of the page lets users switch between hosts.\r\n\r\n# Discarded Ideas\r\n## Time Diagram\r\nOne of the ideas was to include charts showing historical data, but I decided not to pursue this since the main goal was learning Docker and Docker Compose. I would have needed to learn a charting library or framework for the frontend, and that wasn't my priority at this stage.\r\n\r\nThe frontend can support multiple hosts, which can be selected from the dropdown. However, all hosts must connect to the same MySQL server/container, as specified in the `.env` file.\r\n\r\n# What I learned from this\r\nWith this project I learned how to make my own docker images and run them.","isPublished":true,"startDate":"2024-04-01","endDate":"2024-04-20","source":"https://git.bats.li/bats/bats-epic-server-dashboard","preview":"https://status.bats.li","banner":"besd.png"},{"id":"3","name":"BFEC","topics":["software","concept"],"details":["python","encryption","sockets"],"description":"# BFEC (Bats' Fully Encrypted Chat)\r\n\r\nThis is a place to document my journey in building BFEC, a project aimed at learning how to implement a peer-to-peer chat. I chose Python for development because it allowed me to build the project quickly and focus on the core networking and encryption features.\r\n\r\nTo achieve this, I had to learn how to work with sockets and send data between peers.\r\n\r\n![image](/static/resources/media/caaf9c3a-1ffd-4253-9293-7c3582e6e851.png)\r\n\r\n# Implementation\r\n\r\n## Connection Establishment\r\nEstablishing a connection between two peers involves following key steps:\r\n\r\n- Connect to the server of the other peer. If the connection fails, become the server and allow the other peer to connect to the newly created server.\r\n- Exchange RSA public keys and verify their integrity (by comparing checksum of both public keys).\r\n- The peer hosting the server generates an AES key and shares it securely, using end-to-end encryption (E2E) with RSA (AES is used because RSA can't encrypt large amounts of data)\r\n\r\n## Metadata & Message\r\nEach packet is divided into three segments:\r\n\r\n- **AES-Nonce (16 bytes):** Required for AES decryption. This nonce is provided as header information and is not sensitive data.\r\n- **RSA-Signature (256 bytes):** A checksum (sha256) of the unencrypted message, encrypted with the sender's RSA private key. The receiving peer can decrypt it with the sender’s public key and verify the checksum against the decrypted third segment (the encrypted message), protecting against man-in-the-middle (MITM) attacks.\r\n- **Encrypted Message (trailing bytes):** The actual message, encrypted using AES, which can be decrypted using the AES nonce and the previously exchanged AES key.\r\n\r\n\r\n# Software Security\r\n\r\n## Current Security Risks\r\nIt’s important to note that this method cannot fully protect against a MITM attack that intercepts the connection and replaces both public keys from the start. This is a issue that **can not** be solved with a unsecured/untrusted line of communication.\r\n\r\n## Implemented Security Measures\r\nThe critical phase of this implementation is during the connection and key exchange between peers. The primary threat is a MITM attack, where an attacker might replace the RSA public keys.\r\n\r\nTwo layers of protection are implemented:\r\n\r\n1. Client-Side Public Key Verification\r\nBoth peers automatically verify a checksum of the combined public keys. Although this can still be compromised by a sophisticated MITM attack, it adds a first layer of defense. This protects against a single replaced public key during the key exchange.\r\n   \r\n2. RSA Signature Verification\r\nThe message checksum is encrypted with the sender’s RSA private key. The receiver can verify the integrity of the message using the sender's public key, ensuring the message hasn’t been tampered with, as long as the public key exchange was secure. This protects against manipulated or altered messages after the initial key exchange.\r\n","isPublished":true,"startDate":"2024-03-01","endDate":"2024-03-05","source":"https://git.bats.li/bats/bats-fully-encrpyted-chat","preview":"","banner":"bfec.png"},{"id":"5","name":"Hase und Igel","topics":["software"],"details":["java","javafx","oop"],"description":"# Hase und Igel\r\n\r\n\"Hase und Igel\" is a extensive programming project I worked on during my 3rd semester at the FH Wedel University in Germany. The project is a full implementation of the game \"Hase und Igel\" using an object-oriented approach.\r\n\r\n![image](/static/resources/media/00311fa1-b85b-4259-8fe3-d31885adb3c0.png)\r\n\r\n# Implementation Details\r\nThe project was designed with good programming practices in mind, particularly by separating logic from the GUI.\r\n\r\n## Logic and GUI Separation\r\nThis allows for cleaner design and easier maintenance. The GUI frontend is completely independent of the game logic.\r\n  \r\n## Multilingual Support\r\n The frontend can be translated into any language because language tokens are used in the backend. A `Translator` object handles these tokens and provides translations, with German and English implemented by default.\r\n\r\n## Saving and Loading\r\nEach game logic instance can create a `GameData` object, which acts as a wrapper for the core game information (like players and positions). This data is serialized into a JSON file using GSON, allowing for persistent game states.\r\n\r\n## JavaFX Timelines\r\nUsed to animate players as they move across the board, enhancing the user experience with smooth transitions.\r\n\r\n## Object-Oriented Design\r\nEvery in-game object has been represented as an object. This includes:\r\n- **Player** representation of a participating player\r\n- **Fields** representation of a field along side its actions that a player can interact with\r\n- **GameLogic** representation of an entire \"Hase und Igel\" game\r\n- **GameBoard** embodiment of algorithms depending on the current board situation\r\n- **GameData** wrapps necessary information from a running GameLogic Instance\r\n- **GUI Translator** translates logic tokens to text on the frontend\r\n\r\nThe game board is represented as an array of `Field` objects, where each field implements specific logic for player interactions.\r\n\r\n## Field Interface\r\nEach field in the game implements the `Field` interface, which defines key interactions that can occur when a player moves on or interacts with the field.\r\n\r\n```java\r\npublic interface Field {\r\n    // Get the type of the field\r\n    FieldType getType();\r\n    \r\n    // Interact before the player moves to this field\r\n    void interactBeforeMove(Player target);\r\n    \r\n    // Interact after the player has moved to this field\r\n    void interactAfterMove(Player target, GameLogic game, GUIConnector gui);\r\n    \r\n    // Interact while the player is idling on the field\r\n    void interactOnIdle(Player target, GameLogic game, GUIConnector gui);\r\n    \r\n    // Get the position of the field on the board\r\n    int getPosition();\r\n}\r\n```\r\n\r\n\r\n## Program-Organization-Plan\r\n![image](/static/resources/media/4f77b64e-a8d6-4b83-b4ce-6628e0392b05.png)\r\n","isPublished":true,"startDate":"2023-07-01","endDate":"2024-02-20","source":"","preview":"","banner":"haseundigel.png"},{"id":"6","name":"JFX Maze Generation","topics":["software"],"details":["java","javafx","algorithm"],"description":"# Visualizing Maze Generation Algorithms with JavaFX\r\n\r\nOne of the projects I undertook to dive deeper into GUI development in Java was **\"JFX Maze Generation\"**. The core idea was to visually display how different maze generation algorithms work while learning JavaFX for creating graphical interfaces.\r\n\r\n# Motivation\r\nMy goal was to better understand how to build GUIs in Java, and what better way than to create a project that not only looks visually interesting but also allows me to learn how different algorithms work under the hood. By showing the step-by-step creation of mazes with animations, I could see these algorithms in action and learn both algorithmic thinking and GUI development.\r\n\r\n# Maze Generation Algorithms\r\nIn this project, I implemented various maze generation algorithms, each of which can be visually displayed through the JavaFX interface. Below are some of the algorithms I experimented with:\r\n\r\n## Recursive Backtracking Algorithm\r\nThe recursive backtracking algorithm is one of the most commonly used maze generation techniques. It works by recursively visiting cells and \"backtracking\" when hitting dead ends, eventually covering the entire grid.\r\n\r\n[video](/static/resources/media/229618695-e43fc8ab-87fc-4edb-a05c-521fe0b4fed5.mp4)\r\n\r\n## Random Branches Algorithm\r\nThis algorithm generates a maze by randomly creating branches that extend from a starting point. It doesn’t guarantee a perfect maze but creates interesting patterns.\r\n\r\n[video](/static/resources/media/229618683-9dc361d0-f75f-44d4-ae87-1d374a8c0f98.mp4)\r\n\r\n## Binary Tree Algorithm\r\nThe binary tree maze generation algorithm is simple yet effective. It divides the grid into two regions (usually up and right) and carves out a maze by eliminating walls between cells.\r\n\r\n[video](/static/resources/media/229618571-135fdb61-1b28-49f5-8061-a4dec15f2d4a.mp4)\r\n\r\n## Custom Maze Sizes\r\nAn exciting feature of the project was the ability to change the size of the maze dynamically. Whether you want a small or large maze, you can adjust the size through the UI and instantly see the maze generation process.\r\n\r\n[video](/static/resources/media/229618546-d52b8d23-640c-41c4-88a9-b4655de906b7.mp4)\r\n\r\n# What I learned\r\nWorking on this project allowed me to get comfortable with JavaFX. The visual nature of the project also gave me quick feedback on what I was doing right and where I needed to improve. Looking back at it what I could have improved the most was seperating logic and gui, which I accomplished in my following [JavaFX Project](/project/5). Not having a clear seperation between the two gave me many problems in implementing the maze algorithms, because they constantly had to keep in touch with the frontend, and JavaFX does not like being interferred from another thread, where the algorithms had to be running on to not interrupt the frontend experience.\r\n","isPublished":true,"startDate":"2023-03-01","endDate":"2023-03-20","source":"","preview":"","banner":"jfx-maze-gen.png"},{"id":"4","name":"Homepage 1.0","topics":["website"],"details":["css","html"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2022-06-01","endDate":"2022-08-20","source":"","preview":"","banner":"152cdd2e-7be8-4055-9ca7-329868263752.png"},{"id":"7","name":"MRG Tests","topics":["website"],"details":["mysql","javascript","jquery"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2022-02-01","endDate":"2022-06-20","source":"","preview":"","banner":"mrg_tests.png"},{"id":"37c4598e-0b39-4266-8deb-274a629b6c6a","name":"University","topics":["education"],"details":[""],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2022-01-10","endDate":"","source":"https://git.bats.li/bats/fhwedel","preview":"","banner":"d8ffc1f5-a439-4d0e-9942-bc4755c23610.png"},{"id":"8","name":"py_bounty","topics":["software"],"details":["python"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2022-01-01","endDate":"2022-01-20","source":"","preview":"","banner":"py_bounty.png"},{"id":"10","name":"Nichio Website","topics":["website"],"details":["mysql"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2021-11-01","endDate":"2022-01-20","source":"","preview":"","banner":"f68bf841-303d-45ea-ae0f-731d1c6da2a1.png"},{"id":"11","name":"BNCE","topics":["concept"],"details":["encryption","php"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2021-07-01","endDate":"2021-11-20","source":"","preview":"","banner":"907fee2f-72df-4439-9878-d45579286480.png"},{"id":"9","name":"Halbgeist","topics":["website"],"details":["html","css","javascript"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2021-06-01","endDate":"2021-08-20","source":"","preview":"","banner":"05664554-2120-483b-a18c-6fd72206da8d.png"},{"id":"12","name":"Concept Dashboard","topics":["website"],"details":["php","mysql"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2021-02-01","endDate":"2021-04-20","source":"","preview":"","banner":"21789665-cd7d-452c-b2d8-03c08ecf6ca4.png"},{"id":"13","name":"Easy Math","topics":["software"],"details":["java","javafx"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2020-11-01","endDate":"2020-11-20","source":"","preview":"","banner":"873961d2-b131-463e-9e05-3c02cc1db7be.png"},{"id":"15","name":"Typing Hell (Website)","topics":["website"],"details":["php","mysql"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2020-11-01","endDate":"2020-11-20","source":"","preview":"","banner":"90171707-9a66-4110-a6a7-c25d881fbdd9.png"},{"id":"14","name":"Easy Terminal","topics":["software"],"details":["java","javafx"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2020-10-01","endDate":"2020-10-20","source":"","preview":"","banner":"62d9eb77-0dc5-4213-8615-242cc4771b9f.png"},{"id":"16","name":"Typing Hell (Game)","topics":["software"],"details":["java","mysql"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2020-10-01","endDate":"2020-11-20","source":"","preview":"","banner":"c1b1dd9a-7b6b-4257-8e56-934992586606.png"},{"id":"9eea76ca-4d96-47d4-816b-02ae416cb299","name":"PC Building","topics":["hardware"],"details":["PC"],"description":"# Introduction\r\nThis is a place to document my journey with building & upgrading my PC.\r\n\r\n## 2024 April 13th\r\nAn upgrade needed to run Counter-Strike 2 flawlessly.\r\n+ AMD Ryzen 7 7800x3D\r\n+ Thermalright Phantom Spirit 120 EVO CPU Cooler\r\n+ CORSAIR Vengeance DDR5 RAM (2x 16 GB)\r\n+ MSI B650 Gaming Plus\r\n+ Replaced old 500GB SSD with Samsung 870 EVO 2TB\r\n+ WD BLack SN770 NVME SSD 1TB\r\n\r\n![img](/static/resources/media/1.png)\r\n\r\n## 2024 January 25th\r\nIn hopes to run Counter-Strike 2 with constant 240fps I decided to upgrade my GPU. It did not accomplish my goal :(\r\n+ NVIDIA RTX 4060 Ti\r\n\r\n![img](/static/resources/media/2.png)\r\n\r\n## 2021 July 26th\r\nI upgraded my 16GB DDR4 Ram to 32GB and alongside it upgraded my CPU.\r\n- AMD Ryzen 5 5800x\r\n- G.SKill RipJwas V 4x 8 GB RAM\r\n\r\n## 2020 April 30th\r\nI've won a 1000€ Gaming PC in a CS:GO Tournament (1st Place Finish). This came with a Ryzen 5 3600 which I used to replace my Ryzen 5 2600x. \r\nSpecs of the PC I had won (before modifying it):\r\n- AMD Ryzen 5 3600\r\n- AMD RX 5700XT\r\n- MSI MAG Core Liquid 240r\r\n\r\n![img](/static/resources/media/3.png)\r\n\r\n## 2020 April 14th\r\nHere we go RTX 2070.\r\n![alt text](/static/resources/media/c8582281-7816-4ff6-883a-3e22bddcb922.png)\r\n\r\n## 2019 January 15th\r\nI built my first PC, completely by myself with my own hands (with youtube tutorials!). My Case arrived 2 weeks later than the rest, so I had to use it without it during that time. For a short while I was using a **NZXT Kraken x63** all-in-one watercooler. Performance wasn't as expected, so I later replaced it with a **BeQuiet! Dark Rock 4**\r\n- NZXT H700 Case\r\n- AMD Ryzen 5 2600x\r\n- RX 580 8GB\r\n\r\n![img](/static/resources/media/4.png)\r\n\r\n## 2015 February 1st\r\nThe beginning of my journey. Here I got my first gaming PC coming from a cheap Laptop. Finally ready to fully enjoy Minecraft PvP. Unfortunately I didn't took many pictures of it back then. It was a pre-build PC from Amazon because I didn't know any better. However, it did it's job. Thanks BashPVP for the recommendation! I did upgrade the fans at some point to BeQuiet! Pure Wings 2 120mm.\r\nThe specs were:\r\n- Intel Core i5-4590\r\n- NVIDIA GTX 960\r\n- 16GB DDR3 RAM\r\n\r\n![image](/static/resources/media/1d88575f-119e-4751-a3e2-f152cb881232.png)","isPublished":true,"startDate":"2019-01-15","endDate":"","source":"","preview":"","banner":"3176f145-4bf4-43cd-9459-25c8e8f677ce.png"},{"id":"17","name":"Nichio KeyBinder","topics":["software"],"details":["autohotkey"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2018-10-01","endDate":"2021-10-20","source":"","preview":"","banner":"1af64f1c-e99e-40f4-8a4b-fa2c8c8e7acd.png"},{"id":"62e6d9b4-8544-41fd-b955-70889e8fd624","name":"Arduino","topics":["hardware"],"details":["arduino"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2018-08-01","endDate":"2018-09-25","source":"","preview":"","banner":"b0c2e27e-fb5e-4918-afa5-1cda3e6d3d2a.png"},{"id":"18","name":"Fireman","topics":["software"],"details":["java","swing"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2017-09-01","endDate":"2017-10-20","source":"","preview":"","banner":"b1209f9b-107b-4f53-8910-eda0553475c3.png"},{"id":"19","name":"Minecraft Plugins","topics":["software"],"details":["java","plugin"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2016-11-01","endDate":"2016-11-20","source":"","preview":"https://www.spigotmc.org/resources/authors/mousecodez.296030/","banner":"c7dc65ae-c535-41cd-af94-b496ce31c2a6.png"},{"id":"21","name":"Vendetta","topics":["software"],"details":["java"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2016-10-01","endDate":"2016-11-01","source":"","preview":"","banner":""},{"id":"20","name":"Batch Scripting","topics":["software"],"details":["cmd"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2016-08-01","endDate":"2016-08-20","source":"","preview":"","banner":""},{"id":"22","name":"Voice Listener","topics":["software"],"details":["visual basic"],"description":"## [ PLACEHOLDER ]\r\nThis content / documentation has not been written yet.  \r\nFor example please look at following projects:\r\n\r\n- [Spawnpoint](/project/010101)\r\n- [PC Building](/project/9eea76ca-4d96-47d4-816b-02ae416cb299)","isPublished":true,"startDate":"2015-06-01","endDate":"2015-06-20","source":"","preview":"","banner":""}]